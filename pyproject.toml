[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "dsgrid-toolkit"
dynamic = ["version"]
copyright = "Copyright 2025, The Alliance for Sustainable Energy, LLC"
description = "Python API for accessing demand-side grid model (dsgrid) datasets"
url = "https://github.com/dsgrid/dsgrid"
requires-python = ">=3.11"
license = { file = "LICENSE" }
readme = "README.md"
keywords = ["dsgrid"]
authors = [
    {name = "Elaine Hale", email = "elaine.hale@nrel.gov"},
    {name = "Lixi Liu", email = "lixi.liu@nrel.gov"},
    {name = "Meghan Mooney", email = "meghan.mooney@nrel.gov"},
    {name = "Daniel Thom", email = "daniel.thom@nrel.gov"},
]
maintainers = [{name = "Elaine Hale", email = "elaine.hale@nrel.gov"}]
include_package_data = false
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    # We may need these again in the future.
    # "awscliv2",
    # "boto3",
    # "s3path",
    "chronify ~= 0.3.1",
    "click>=8.2, < 9",
    "dash",
    "dash_bootstrap_components",
    "duckdb >= 1, < 2",
    "fastapi",
    "json5",
    "networkx",
    "pandas",
    "prettytable",
    "pyarrow",
    "pydantic~=2.11.6",
    "requests",
    "rich_click",
    "semver",
    "sqlalchemy >= 2, < 3",
    "uvicorn",
    "tzdata",  # time zone stuff
]

[project.urls]
GitHub = "https://github.com/dsgrid/dsgrid"
Documentation = "https://dsgrid.github.io/dsgrid/"
Homepage = "https://www.nrel.gov/analysis/dsgrid"

[tool.hatch.version]
path = "dsgrid/__init__.py"

[tool.hatch.build.targets.sdist]
packages = ["dsgrid"]

[tool.hatch.build.targets.wheel]
packages = ["dsgrid"]

[tool.hatch.metadata]
allow-direct-references = true

[project.optional-dependencies]
spark = [
    "chronify[spark]",
    # "pyhive",
    "pyspark==4.0.0",  # Keep this synced with the spark version in Dockerfile.
    "thrift",
    "thrift_sasl",
]

dev = [
    "httpx",  # starlette, used by fastapi, requires this as an optional dependency for testing.
    "pytest",
    "pytest-cov",
    "pre-commit",
    "devtools",
    "flake8",
    "mypy",
    "pyarrow",
]

doc = [
    "furo",
    "ghp-import",
    "numpydoc",
    "pandas-stubs",
    "ruff",
    "sphinx~=7.2",
    "sphinx-click~=5.0",
    "sphinx-copybutton~=0.5.2",
    "sphinx-tabs~=3.4",
    "sphinx_argparse~=0.4.0",
    "sphinxcontrib.programoutput",
    "autodoc_pydantic[erdantic]~=2.0",
]

release = ["twine", "setuptools", "wheel"]

[project.scripts]
dsgrid = "dsgrid.cli.dsgrid:cli"
# This exists because spark-submit does not recognize the above 'dsgrid' as a Python
# application.
"dsgrid-cli.py" = "dsgrid.cli.dsgrid:cli"
dsgrid-admin = "dsgrid.cli.dsgrid_admin:cli"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra"
testpaths = ["tests"]

[tool.mypy]
plugins = "pydantic.mypy"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".ruff_cache",
    ".venv",
    "_build",
    "build",
    "dist",
    "env",
    "venv",
]

extend-exclude = [
    "dsgrid/utils/py_expression_eval/*.py",
    "dsgrid/notebooks/*.ipynb"
]

line-length = 99
indent-width = 4

target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = [
  # TODO: fix the complexity issues. There are many.
  # "C901",   # McCabe complexity
    "E4",     # Subset of pycodestyle (E)
    "E7",
    "E9",
    "EM",     # string formatting in an exception message
    "F",      # Pyflakes
    "W",      # pycodestyle warnings
]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"**/{tests,docs,tools}/*" = ["E402"]
